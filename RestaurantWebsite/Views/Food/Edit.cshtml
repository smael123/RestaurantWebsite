@model RestaurantWebsite.ViewModels.FoodFormViewModel

@{
    string h1Text = (Model.Id != 0) ? ("Edit " + Model.Name) : "New Food";
}

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = h1Text;
}

<h1>@h1Text</h1>

@using (Html.BeginForm("Save", "Food"))
{
    @Html.ValidationSummary(true, "Please fix the following errors")
    <div class="form-group">
        @Html.LabelFor(c => c.Name)
        @Html.TextBoxFor(c => c.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Description)
        @Html.TextAreaFor(c => c.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Description)
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.BasePrice)
        @Html.TextBoxFor(c => c.BasePrice, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.BasePrice)
    </div>
    <div class="btn-group">
        <button type="submit" class="btn btn-primary">Save</button>
        @{
            if (Model.Id != 0)
            {
                if (Model.IsArchived) {
                    @Html.ActionLink("Restore", "Restore", new { id = Model.Id }, new { @class = "btn btn-secondary" });
                }
                else {
                    @Html.ActionLink("Archive", "Archive", new { id = Model.Id }, new { @class = "btn btn-secondary" });
                }
            }
        }
    </div>
}
<table class="table" id="extra-table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var extra in Model.Extras)
        {
            <tr data-extra-id="@extra.Id">
                <td>@Html.DisplayTextFor(c => extra.Name)</td>
                <td>@Html.DisplayTextFor(c => extra.AddedPrice)</td>
                <td>@Html.ActionLink("Edit", "Edit", "Extra", new { id = extra.Id }, new { @class="btn btn-secondary" })</td>
                <td><a class="btn btn-secondary delete-btn" href="#">Delete</a></td>
            </tr>
        }
    </tbody>
</table>

@Html.ActionLink("New Extra", "New", "Extra", new { foodId = Model.Id }, new { @class = "btn btn-secondary new-item" })

@*Why do i need to wrap it?*@
@Html.Action("GetAllOfFood", "FoodPicture", new { foodId = Model.Id })

@Html.HiddenFor(c => c.Id)



@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $(".delete-btn").click(function () {
                var tableRow = $(this).parent().parent();
                var extraId = tableRow.attr("data-extra-id");

                var jsonUrl = "/Extra/Delete/" + extraId;

                $.getJSON(jsonUrl, function (value) {
                    if (value["Success"] == true) {
                        tableRow.remove();
                    }
                    else {
                        alert(value["Message"]);
                    }
                });

                
            })
        })
    </script>
}